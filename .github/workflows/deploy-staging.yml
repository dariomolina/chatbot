name: develop-deploy

on:
  push:
    branches:
      - develop
defaults:
  run:
    shell: bash
jobs:
  select_environment:
    name: Select Environment
    runs-on: ubuntu-latest
    steps:
      - name: Check branch
        id: branch_check
        run: |
          echo "Running on branch ${{ github.ref_name }}"
          case ${{ github.ref_name }} in
            main)
              name=Main
              ;;
            develop)
              name=Develop
              ;;
            *)
              echo "Branch not allowed."
              exit 1
              ;;
          esac
          echo "selected environment: $name"
          # echo "env_name=$name" >> $GITHUB_OUTPUT
          echo "branch_name=$name" >> $GITHUB_ENV

  test_build_docker:
    name: building docker-compose
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build docker-compose
        run: |
          docker-compose build
          docker-compose up -d
      - name: Check if container is running
        run: |
          container_status=$(docker-compose ps -q)
          if [ -z "$container_status" ]; then
            echo "Error: Container failed to start."
            exit 1
          else
            echo "Container is running."
          fi

  deploy:
    name: deploy to staging
    runs-on: self-hosted
    needs:
      - select_environment
      - test_build_docker
    steps:
      - name: pull changes
        run: |
          echo "Branch name received: ${{ needs.select_environment.outputs['branch-name'] }}"
          pwd
          echo "Current directory: $(pwd)"
          cd ~/chatbot
          echo "Pulling changes from origin/staging..."
          if ! git pull origin ${{ needs.validar-branch.outputs['branch-name'] }}; then
            echo "Error: Git pull failed."
            exit 1
          fi
          echo "Git pull completed. Current commit: $(git rev-parse HEAD)"
